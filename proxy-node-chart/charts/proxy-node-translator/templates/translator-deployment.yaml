apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-translator
  labels:
    app.kubernetes.io/name: translator
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: translator
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: translator
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      volumes:
        - name: proxy-node-pki
          secret:
            secretName: proxy-node-pki
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "docker_image" (tuple .Chart.Name .) }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        - name: mgmt
          containerPort: 6661
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: mgmt
          initialDelaySeconds: 20
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
        volumeMounts:
          - mountPath: /app/keys/
            name: proxy-node-pki
            readOnly: true
        env:
        - name: PORT
          value: "80"
        - name: PROXY_NODE_METADATA_FOR_CONNECTOR_NODE_URL
          value: http://{{ .Release.Name }}-stub-metadata/metadata_for_connector_node.xml
        - name: CONNECTOR_NODE_ISSUER_ID
          valueFrom:
            secretKeyRef:
              name: proxy-node-pki
              key: CONNECTOR_NODE_ISSUER_ID
        - name: SIGNER_CONFIG_TYPE
          value: cloudhsm
        - name: HSM_SIGNING_KEY_LABEL
          value: signing_key
        - name: SIGNING_CERT
          valueFrom:
            secretKeyRef:
              name: proxy-node-pki
              key: SIGNING_CERT
